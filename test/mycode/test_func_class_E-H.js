import assert from 'assert'
import * as myfunc from "./myfunc";
import {ISBLANK} from '../../src/calc/expression_fn/lib/information';
import {
    CellVEmpty,
    CellVError,
    CellVBool,
    CellVString,
    CellVNumber,
    CellVDateTime
} from '../../src/calc/cell_value_type/cell_value';
import {RawValue} from '../../src/calc/calc_data_proxy/syntax_unit_raw_value';
import {easySolve} from '../../src/calc/calc_data_proxy/exp_fn_executor';
import * as date_time from '../../src/calc/expression_fn/lib/date_time'
import * as statistical from '../../src/calc/expression_fn/lib/statistical'
import * as mathtrig from '../../src/calc/expression_fn/lib/math-trig'
import * as financial from '../../src/calc/expression_fn/lib/financial'
import * as logical from '../../src/calc/expression_fn/lib/logical'
import * as text from '../../src/calc/expression_fn/lib/text'
import * as engineering from '../../src/calc/expression_fn/lib/engineering'
import * as database from '../../src/calc/expression_fn/lib/database'
import {ERROR_DIV0, ERROR_NA, ERROR_NUM, ERROR_VALUE} from "../../src/calc/calc_utils/error_config";
import * as information from '../../src/calc/expression_fn/lib/information'

describe('expression_fn integration', function () {
    describe('func', function () {
        it('EDATE', function () {
            let res1 = easySolve(date_time.EDATE, ['2011-1-15', 1])
            console.log(res1)
            let res2 = easySolve(date_time.EDATE, ['2011-1-15', -1])
            console.log(res2)
            let res3 = easySolve(date_time.EDATE, ['2011-1-15', 2])
            console.log(res3)
        })
        it('EFFECT', function () {
            let res1 = easySolve(financial.EFFECT, [0.0525, 4])
            console.log(res1)
            assert(Math.abs(res1 - 0.0535427) < 0.001)
            let res2 = easySolve(financial.EFFECT, [-0.0525, 4])
            console.log(res2)
            assert.equal(res2.message, ERROR_NUM)
        })
        it('EOMONTH', function () {
            let res1 = easySolve(date_time.EOMONTH, ['2011-1-1', 1])
            console.log(res1)
            let res2 = easySolve(date_time.EOMONTH, ['2011-1-1', -3])
            console.log(res2)
        })
        it('ERF', function () {
            let res1 = easySolve(engineering.ERF, [0.745])
            console.log(res1)
            assert(Math.abs(res1 - 0.70792892) < 0.001)
            let res2 = easySolve(engineering.ERF, [1])
            console.log(res2)
            assert(Math.abs(res2 - 0.84270079) < 0.001)
            let res3 = easySolve(engineering.ERF, [1, 2])
            console.log(res3)
            assert(Math.abs(res3 - 0.152621472) < 0.001)
        })
        it('ERFC', function () {
            let res1 = easySolve(engineering.ERFC, [1])
            console.log(res1)
            assert(Math.abs(res1 - 0.15729921) < 0.001)
        })
        it('ERROR.TYPE', function () {
            let res1 = easySolve(information.ERROR.TYPE, ['#NULL!'])
            console.log(res1)
            assert.equal(res1, 1)
            let res2 = easySolve(information.ERROR.TYPE, ['#NAME?'])
            console.log(res2)
            assert.equal(res2, 5)
        })
        it('EVEN', function () {
            let res1 = easySolve(mathtrig.EVEN, [1.5])
            console.log(res1)
            assert.equal(res1, 2)
            let res2 = easySolve(mathtrig.EVEN, [3])
            console.log(res2)
            assert.equal(res2, 4)
            let res3 = easySolve(mathtrig.EVEN, [2])
            console.log(res3)
            assert.equal(res3, 2)
            let res4 = easySolve(mathtrig.EVEN, [-1])
            console.log(res4)
            assert.equal(res4, -2)
        })
        it('EXACT', function () {
            let res1 = easySolve(text.EXACT, ['word', 'word'])
            console.log(res1)
            assert.equal(res1, true)
            let res2 = easySolve(text.EXACT, ['Word', 'word'])
            console.log(res2)
            assert.equal(res2, false)
            let res3 = easySolve(text.EXACT, ['w ord', 'word'])
            console.log(res3)
            assert.equal(res3, false)
        })
        it('EXP', function () {
            let res1 = easySolve(mathtrig.EXP, [1])
            console.log(res1)
            assert(Math.abs(res1 - 2.71828183) < 0.001)
            let res2 = easySolve(mathtrig.EXP, [2])
            console.log(res2)
            assert(Math.abs(res2 - 7.3890561) < 0.001)
        })
        it('EXPON.DIST', function () {
            let res1 = easySolve(statistical.EXPON.DIST, [0.2, 10, 'true'])
            console.log(res1)
            assert(Math.abs(res1 - 0.86466472) < 0.001)
            let res2 = easySolve(statistical.EXPON.DIST, [0.2, 10, 'false'])
            console.log(res2)
            assert(Math.abs(res2 - 1.35335283) < 0.001)
            let res3 = easySolve(statistical.EXPON.DIST, [0.2, -10, 'false'])
            console.log(res3)
            assert.equal(res3.message, ERROR_NUM)
        })
        it('F.DIST', function () {
            let res1 = easySolve(statistical.F.DIST, [15.2069, 6, 4, 'TRUE'])
            console.log(res1)
            assert(Math.abs(res1 - 0.99) < 0.001)
            let res2 = easySolve(statistical.F.DIST, [15.2069, 6, 4, 'FALSE'])
            console.log(res2)
            assert(Math.abs(res2 - 0.0012238) < 0.001)
            let res3 = easySolve(statistical.F.DIST, ['AAA', 6, 4, 'FALSE'])
            console.log(res3)
            assert.equal(res3.message, ERROR_VALUE)
        })
        it('F.DIST.RT', function () {
            let res1 = easySolve(statistical.F.DIST.RT, [15.2069, 6, 4])
            console.log(res1)
            assert(Math.abs(res1 - 0.01) < 0.001)
            let res2 = easySolve(statistical.F.DIST.RT, ['AAA', 6, 4])
            console.log(res2)
            assert.equal(res2.message, ERROR_VALUE)
        })
        it('F.INV', function () {
            let res1 = easySolve(statistical.F.INV, [0.01, 6, 4])
            console.log(res1)
            assert(Math.abs(res1 - 0.10930991) < 0.001)
            let res2 = easySolve(statistical.F.INV, [-0.01, 6, 4])
            console.log(res2)
            assert.equal(res2.message, ERROR_NUM)
            let res3 = easySolve(statistical.F.INV, [0.01, 0.6, 4])
            console.log(res3)
            assert.equal(res3.message, ERROR_NUM)
            let res4 = easySolve(statistical.F.INV, [0.5, 8, 5])
            console.log(res4)
            assert(Math.abs(res4 - 1.054509625) < 0.001)
        })
        it('F.INV.RT', function () {
            let res1 = easySolve(statistical.F.INV.RT, [0.01, 6, 4])
            console.log(res1)
            assert(Math.abs(res1 - 15.20686) < 0.001)
            let res2 = easySolve(statistical.F.INV.RT, [-0.01, 6, 4])
            console.log(res2)
            assert.equal(res2.message, ERROR_NUM)
        })
        it('FACT', function () {
            let res1 = easySolve(mathtrig.FACT, [5])
            console.log(res1)
            assert.equal(res1, 120)
            let res2 = easySolve(mathtrig.FACT, [1.9])
            console.log(res2)
            assert.equal(res2, 1)
            let res3 = easySolve(mathtrig.FACT, [0])
            console.log(res3)
            assert.equal(res3, 1)
            let res4 = easySolve(mathtrig.FACT, [-1])
            console.log(res4)
            assert.equal(res4.message, ERROR_NUM)
            let res5 = easySolve(mathtrig.FACT, [1])
            console.log(res5)
            assert.equal(res5, 1)
        })
        it('FACTDOUBLE', function () {
            let res1 = easySolve(mathtrig.FACTDOUBLE, [6])
            console.log(res1)
            assert.equal(res1, 48)
            let res2 = easySolve(mathtrig.FACTDOUBLE, [7])
            console.log(res2)
            assert.equal(res2, 105)
            let res3 = easySolve(mathtrig.FACTDOUBLE, [-8.5])
            console.log(res3)
            assert.equal(res3.message, ERROR_NUM)
        })
        it('FIND', function () {
            let res1 = easySolve(text.FIND, ['M', 'Miriam McGovern'])
            console.log(res1)
            assert.equal(res1, 1)
            let res2 = easySolve(text.FIND, ['m', 'Miriam McGovern'])
            console.log(res2)
            assert.equal(res2, 6)
            let res3 = easySolve(text.FIND, ['M', 'Miriam McGovern', 3])
            console.log(res3)
            assert.equal(res3, 8)
        })
        it('FISHER', function () {
            let res1 = easySolve(statistical.FISHER, [0.75])
            console.log(res1)
            assert(Math.abs(res1 - 0.9729551) < 0.001)
            let res2 = easySolve(statistical.FISHER, [10])
            console.log(res2)
            assert.equal(res2.message, ERROR_NUM)
        })
        it('FISHERINV', function () {
            let res1 = easySolve(statistical.FISHERINV, [0.972955])
            console.log(res1)
            assert(Math.abs(res1 - 0.75) < 0.001)
            let res2 = easySolve(statistical.FISHERINV, ['aaa'])
            console.log(res2)
            assert.equal(res2.message, ERROR_VALUE)
        })
        it('FLOORMATH', function () {
            let res1 = easySolve(mathtrig.FLOORMATH, [24.3, 5])
            console.log(res1)
            assert.equal(res1, 20)
            let res2 = easySolve(mathtrig.FLOORMATH, [6.7])
            console.log(res2)
            assert.equal(res2, 6)
            let res3 = easySolve(mathtrig.FLOORMATH, [-8.1, 2])
            console.log(res3)
            assert.equal(res3, -10)
            let res4 = easySolve(mathtrig.FLOORMATH, [-5.5, 2, -1])
            console.log(res4)
            assert.equal(res4, -4)
        })
        it('FLOORPRACE', function () {
            let res1 = easySolve(mathtrig.FLOORPRACE, [24.3, 5])
            console.log(res1)
            assert.equal(res1, 20)
            let res2 = easySolve(mathtrig.FLOORPRACE, [6.7])
            console.log(res2)
            assert.equal(res2, 6)
            let res3 = easySolve(mathtrig.FLOORPRACE, [-8.1, 2])
            console.log(res3)
            assert.equal(res3, -10)
            let res4 = easySolve(mathtrig.FLOORPRACE, [-5.5, 2, -1])
            console.log(res4)
            assert.equal(res4, -4)
        })
        it('FORECAST', function () {
            let res1 = easySolve(statistical.FORECAST, [30, [6, 7, 9, 15, 26], [20, 28, 30, 38, 40]])
            console.log(res1)
            assert(Math.abs(res1 - 11.5398773) < 0.001)
        })
        it('FV', function () {
            let res1 = easySolve(financial.FV, [0.06, 10, -200, -500, 1])
            console.log(res1)
            assert(Math.abs(res1 - 3689.752376) < 0.001)
            let res2 = easySolve(financial.FV, [0.06, 10, -200, -500])
            console.log(res2)
            assert(Math.abs(res2 - 3531.582837) < 0.001)
        })
        it('FVSCHEDULE', function () {
            let res1 = easySolve(financial.FVSCHEDULE, [1, [0.09, 0.11, 0.1]])
            console.log(res1)
            assert(Math.abs(res1 - 1.3309) < 0.001)
        })
        it('GAMMA', function () {
            let res1 = easySolve(statistical.GAMMA, [2.5])
            console.log(res1)
            assert(Math.abs(res1 - 1.329) < 0.001)
            let res2 = easySolve(statistical.GAMMA, [-3.75])
            console.log(res2)
            assert(Math.abs(res2 - 0.267866) < 0.001)
            let res3 = easySolve(statistical.GAMMA, [0])
            console.log(res3)
            assert.equal(res3.message, ERROR_NUM)
            let res4 = easySolve(statistical.GAMMA, ['AAA'])
            console.log(res4)
            assert.equal(res4.message, ERROR_VALUE)
        })
        it('GAMMA.DIST', function () {
            let res1 = easySolve(statistical.GAMMA.DIST, [10.00001131, 9, 2, 'FALSE'])
            console.log(res1)
            assert(Math.abs(res1 - 0.03263913) < 0.001)
            let res2 = easySolve(statistical.GAMMA.DIST, [10.00001131, 9, 2, 'TRUE'])
            console.log(res2)
            assert(Math.abs(res2 - 0.068094004) < 0.001)
        })
        it('GAMMA.INV', function () {
            let res1 = easySolve(statistical.GAMMA.INV, [0.068094, 9, 2])
            console.log(res1)
            assert(Math.abs(res1 - 10.0000112) < 0.001)
            let res2 = easySolve(statistical.GAMMA.INV, [-10.00001131, 9, 2])
            console.log(res2)
            assert.equal(res2.message, ERROR_NUM)
        })
        it('GAMMALN', function () {
            let res1 = easySolve(statistical.GAMMALN, [4])
            console.log(res1)
            assert(Math.abs(res1 - 1.7917595) < 0.001)
            let res2 = easySolve(statistical.GAMMALN, [-10])
            console.log(res2)
            assert.equal(res2.message, ERROR_NUM)
        })
        it('GAMMALN.PRECISE', function () {
            let res1 = easySolve(statistical.GAMMALN.PRECISE, [4])
            console.log(res1)
            assert(Math.abs(res1 - 1.7917595) < 0.001)
            let res2 = easySolve(statistical.GAMMALN.PRECISE, [-10])
            console.log(res2)
            assert.equal(res2.message, ERROR_NUM)
        })
        it('GAUSS', function () {
            let res1 = easySolve(statistical.GAUSS, [2])
            console.log(res1)
            assert(Math.abs(res1 - 0.47725) < 0.001)
            let res2 = easySolve(statistical.GAUSS, ['aaaaa'])
            console.log(res2)
            assert.equal(res2.message, ERROR_VALUE)
        })
        it('GCD', function () {
            let res1 = easySolve(mathtrig.GCD, [5, 2])
            console.log(res1)
            assert.equal(res1, 1)
            let res2 = easySolve(mathtrig.GCD, [2, -6])
            console.log(res2)
            assert.equal(res2.message, ERROR_NUM)
            let res3 = easySolve(mathtrig.GCD, [15, 105, 95])
            console.log(res3)
            assert.equal(res3, 5)
        })
        it('GEOMEAN', function () {
            let res1 = easySolve(statistical.GEOMEAN, [4, 5, 8, 7, 11, 4, 3])
            console.log(res1)
            assert(Math.abs(res1 - 5.476987) < 0.001)
            let res2 = easySolve(mathtrig.GCD, [15, -105, 95])
            console.log(res2)
            assert.equal(res2.message, ERROR_NUM)
        })
        it('GESTEP', function () {
            let res1 = easySolve(engineering.GESTEP, [5, 4])
            console.log(res1)
            assert.equal(res1, 1)
            let res2 = easySolve(engineering.GESTEP, [5, 5])
            console.log(res2)
            assert.equal(res2, 1)
            let res3 = easySolve(engineering.GESTEP, [-4, -5])
            console.log(res3)
            assert.equal(res3, 1)
            let res4 = easySolve(engineering.GESTEP, [-1])
            console.log(res4)
            assert.equal(res4, 0)
        })
    })
})